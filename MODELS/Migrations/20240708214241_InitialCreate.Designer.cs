// <auto-generated />
using System;
using MODELS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MODELS.Migrations
{
    [DbContext(typeof(ModelsContext))]
    [Migration("20240708214241_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MODELS.Models.CV", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Jobid")
                        .HasColumnType("integer");

                    b.Property<string>("PracticalExperience")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("education")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lalstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("phon")
                        .HasColumnType("integer");

                    b.Property<string>("profile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("skills")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Jobid");

                    b.ToTable("cv");
                });

            modelBuilder.Entity("MODELS.Models.Job", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Usersid")
                        .HasColumnType("integer");

                    b.Property<int?>("Usersid1")
                        .HasColumnType("integer");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("experience")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("requirements")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Usersid");

                    b.HasIndex("Usersid1");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("MODELS.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lalstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("usercvid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("usercvid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MODELS.Models.CV", b =>
                {
                    b.HasOne("MODELS.Models.Job", null)
                        .WithMany("applicant")
                        .HasForeignKey("Jobid");
                });

            modelBuilder.Entity("MODELS.Models.Job", b =>
                {
                    b.HasOne("MODELS.Models.Users", null)
                        .WithMany("saveJobs")
                        .HasForeignKey("Usersid");

                    b.HasOne("MODELS.Models.Users", null)
                        .WithMany("userJobs")
                        .HasForeignKey("Usersid1");
                });

            modelBuilder.Entity("MODELS.Models.Users", b =>
                {
                    b.HasOne("MODELS.Models.CV", "usercv")
                        .WithMany()
                        .HasForeignKey("usercvid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usercv");
                });

            modelBuilder.Entity("MODELS.Models.Job", b =>
                {
                    b.Navigation("applicant");
                });

            modelBuilder.Entity("MODELS.Models.Users", b =>
                {
                    b.Navigation("saveJobs");

                    b.Navigation("userJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
